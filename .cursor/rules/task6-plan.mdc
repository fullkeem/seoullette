---
description: task6 plan
globs: 
alwaysApply: false
---
# Task 6 개발 계획: 룰렛 엔진

## 구현 항목
- 무작위 선택 알고리즘 및 게임 로직 구현
- Math.random() 기반 공정한 선택 알고리즘
- 1000회 실행 시 균등 분포 확인

## 기술 요구사항
- **알고리즘**: Math.random() 기반 무작위 선택
- **공정성**: 균등 분포 보장
- **TypeScript**: RouletteEngine 인터페이스 구현

## 개발 계획

### 1. RouletteEngine 클래스 구현
- spin(): 비동기 룰렛 실행
- validatePlaces(): 장소 배열 검증
- generateRandomResult(): 무작위 선택

### 2. 무작위 알고리즘
- Math.random() × places.length
- Math.floor()로 정수 인덱스 변환
- 균등 분포 보장

### 3. 게임 로직
- 스핀 시간 시뮬레이션 (2-4초)
- 애니메이션 타이밍 계산
- 결과 반환

### 4. 검증 로직
- 최소 2개 장소 확인
- 최대 10개 장소 제한
- 빈 배열 처리

## 파일 구조
```
src/lib/
├── roulette-engine.ts  # 룰렛 엔진 구현
└── utils.ts           # 유틸리티 함수
```

## 완료 기준
- [ ] RouletteEngine 인터페이스 구현
- [ ] 무작위 선택 알고리즘 동작 확인
- [ ] 1000회 테스트 균등 분포 검증
- [ ] 입력 검증 로직 구현

참고 파일: [development-tasks.mdc](mdc:development-tasks.mdc), [task2-plan.mdc](mdc:task2-plan.mdc), [task4-plan.mdc](mdc:task4-plan.mdc)

